{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\torav\\\\OneDrive\\\\Desktop\\\\todo-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n// App.js\nimport './App.css';\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport FilterBar from './components/FilterBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n  const addTask = (taskText, dueDate) => {\n    if (taskText.trim() !== '') {\n      const newTask = {\n        id: Date.now(),\n        text: taskText,\n        completed: false,\n        dueDate: dueDate || null,\n        date: new Date()\n      };\n      setTasks([...tasks, newTask]);\n    }\n  };\n  const markTask = taskId => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const deleteTask = taskId => {\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n  const editTask = (taskId, newText) => {\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      text: newText\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const filterTasks = status => {\n    setFilter(status);\n  };\n  const sortedTasks = [...tasks].sort((a, b) => new Date(b.date) - new Date(a.date));\n  const filteredTasks = sortedTasks.filter(task => {\n    if (filter === 'completed') {\n      return task.completed;\n    } else if (filter === 'incomplete') {\n      return !task.completed;\n    } else {\n      return true;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskInput, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FilterBar, {\n      setFilter: filterTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n      tasks: filteredTasks,\n      markTask: markTask,\n      deleteTask: deleteTask,\n      editTask: editTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QPzHS6yxgTMd+mLLtAh4oSYXmow=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Header","TaskInput","TaskList","FilterBar","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","filter","setFilter","addTask","taskText","dueDate","trim","newTask","id","Date","now","text","completed","date","markTask","taskId","updatedTasks","map","task","deleteTask","editTask","newText","filterTasks","status","sortedTasks","sort","a","b","filteredTasks","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/torav/OneDrive/Desktop/todo-list/src/App.js"],"sourcesContent":["// App.js\n// App.js\nimport './App.css'\nimport React, { useState } from 'react';\nimport Header from './components/Header';\nimport TaskInput from './components/TaskInput';\nimport TaskList from './components/TaskList';\nimport FilterBar from './components/FilterBar';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [filter, setFilter] = useState('all');\n\n  const addTask = (taskText, dueDate) => {\n    if (taskText.trim() !== '') {\n      const newTask = { id: Date.now(), text: taskText, completed: false, dueDate: dueDate || null, date: new Date() };\n      setTasks([...tasks, newTask]);\n    }\n  };\n\n  const markTask = (taskId) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const deleteTask = (taskId) => {\n    const updatedTasks = tasks.filter((task) => task.id !== taskId);\n    setTasks(updatedTasks);\n  };\n\n  const editTask = (taskId, newText) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === taskId ? { ...task, text: newText } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  const filterTasks = (status) => {\n    setFilter(status);\n  };\n\n  const sortedTasks = [...tasks].sort((a, b) => new Date(b.date) - new Date(a.date));\n\n  const filteredTasks = sortedTasks.filter((task) => {\n    if (filter === 'completed') {\n      return task.completed;\n    } else if (filter === 'incomplete') {\n      return !task.completed;\n    } else {\n      return true;\n    }\n  });\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <TaskInput addTask={addTask} />\n      <FilterBar setFilter={filterTasks} />\n      <TaskList\n        tasks={filteredTasks}\n        markTask={markTask}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}